import pandas as pd
from sklearn.ensemble import RandomForestClassifier
from sklearn.model_selection import train_test_split
from sklearn.metrics import classification_report
import matplotlib.pyplot as plt

# Upload data
from google.colab import files
uploaded = files.upload()

# Load the CSV data
df = pd.read_csv('your_data.csv')

# Data Preprocessing (example)
# Replace missing values with the mean
df.fillna(df.mean(), inplace=True)

# Split data into features (X) and labels (y)
X = df.drop('label', axis=1)  # assuming 'label' is the column with 'safe' or 'danger'
y = df['label']  # 'safe' or 'danger'

# Split data into training and testing sets
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)

# Initialize and train RandomForest
rf = RandomForestClassifier(n_estimators=100, random_state=42)
rf.fit(X_train, y_train)

# Predict on test data
y_pred = rf.predict(X_test)

# Show results
print(classification_report(y_test, y_pred))

# Feature importance
feature_importances = rf.feature_importances_
plt.barh(X.columns, feature_importances)
plt.title("Feature Importance")
plt.show()
